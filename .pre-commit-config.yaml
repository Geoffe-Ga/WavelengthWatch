minimum_pre_commit_version: "3.7.1"
default_install_hook_types:
  - pre-commit
  - pre-push
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: check-ast
      - id: check-yaml
      - id: check-toml
      - id: check-json
      - id: detect-private-key
      - id: end-of-file-fixer
        exclude: '^\.github/workflows/(claude-code-review\.yml|claude\.yml)$'
      - id: mixed-line-ending
      - id: trailing-whitespace
        exclude: '^\.github/workflows/(claude-code-review\.yml|claude\.yml)$'
      - id: check-added-large-files
        args: ["--maxkb=250"]
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        name: black (backend Python)
        files: ^(backend/|tests/|scripts/)
        args: ["--config=pyproject.toml"]
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.12.9
    hooks:
      - id: ruff
        name: ruff (lint)
        files: ^(backend/|tests/|scripts/)
        args: ["--config=ruff.toml", "--fix"]
      - id: ruff-format
        name: ruff (format)
        files: ^(backend/|tests/|scripts/)
        args: ["--config=ruff.toml"]
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.17.1
    hooks:
      - id: mypy
        files: ^backend/
        args: ["--config-file", "mypy.ini"]
        additional_dependencies:
          - types-requests
          - pydantic
          - sqlmodel
          - fastapi
          - starlette
  - repo: https://github.com/PyCQA/isort
    rev: 6.0.1
    hooks:
      - id: isort
        name: isort (imports)
        files: ^(backend/|tests/|scripts/)
        args: ["--settings-path=pyproject.toml"]
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        name: bandit (security)
        files: ^backend/
        args: ["-c", "backend/.bandit", "-r", "backend"]
  - repo: https://github.com/trailofbits/pip-audit
    rev: v2.9.0
    hooks:
      - id: pip-audit
        name: pip-audit (backend dependencies)
        files: ^backend/
        args: ["-r", "backend/requirements.txt"]
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        args: ["--baseline", ".secrets.baseline"]
  - repo: local
    hooks:
      - id: swiftformat
        name: SwiftFormat (watchOS)
        entry: scripts/swiftformat_lint.sh
        language: script
        files: ^frontend/.*\.swift$
      - id: backend-tests
        name: backend tests (on push)
        entry: bash
        language: system
        pass_filenames: false
        files: ^(backend/|tests/backend/)
        stages: [pre-push]
        args:
          - -lc
          - |
            set -euo pipefail
            if [ ! -d ".venv" ]; then python3 -m venv .venv; fi
            source .venv/bin/activate
            python -m pip install --upgrade pip
            pip install -r backend/requirements.txt
            if [ -f backend/requirements-dev.txt ]; then pip install -r backend/requirements-dev.txt; fi
            pytest -q
